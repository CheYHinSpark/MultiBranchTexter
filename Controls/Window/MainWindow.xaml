<local:MetroWindow x:Class="MultiBranchTexter.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:local="clr-namespace:MultiBranchTexter"
                   xmlns:vm="clr-namespace:MultiBranchTexter.ViewModel"
                   xmlns:c="clr-namespace:MultiBranchTexter.Controls"
                   Style="{StaticResource MainWindowStyle}"
                   WindowStartupLocation="CenterScreen"
                   Title="MultiBranchTexter" Height="450" Width="800">
    <local:MetroWindow.DataContext>
        <vm:MainViewModel/>
    </local:MetroWindow.DataContext>
    
    <local:MetroWindow.InputBindings>
        <KeyBinding Gesture="Ctrl+Shift+N" Command="{Binding NewFileCommand}"/>
        <KeyBinding Gesture="Ctrl+O" Command="{Binding OpenFileCommand}"/>
        <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveNodeCommand}"/>
        <KeyBinding Gesture="Ctrl+Alt+S" Command="{Binding SaveFileCommand}"/>
        <KeyBinding Gesture="Ctrl+Shift+S" Command="{Binding SaveAsFileCommand}"/>
        <KeyBinding Gesture="Alt+Left" Command="{Binding LeftPullCommand}"/>
        <KeyBinding Gesture="Alt+Right" Command="{Binding RightPullCommand}"/>
        <KeyBinding Gesture="Esc" Command="{Binding ExitFullScreenCommand}"/>
    </local:MetroWindow.InputBindings>
    
    <Grid Background="{DynamicResource BaseBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="28"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"
                    Grid.Row="0">
            <Button ToolTip="新建" Width="28"
                    Template="{StaticResource generalButtonTemplate}"
                    Command="{Binding NewFileCommand}"
                    Content="M0,9 L6,9 M3,6 3,12
                    M2,5 2,0 9,0 12,3 12,14 2,14 L2,13
                    M9,0 9,3 L12,3"/>
            <Button ToolTip="打开" Width="28"
                    Template="{StaticResource generalButtonTemplate}"
                    Command="{Binding OpenFileCommand}"
                    Content="M1,12 13,12 16,6 4,6 Z
                    M1,12 0,12 0,4 2,2 6,2 8,4 13,4 L13,6"/>
            <Button ToolTip="保存" Width="28"
                    Template="{StaticResource generalButtonTemplate}"
                    Command="{Binding SaveFileCommand}"
                    Content="M0,14 0,0 3,0 3,5 8,5 8,0 9,0 12,3 12,14 Z
                    M4,0 6,0 L6,4"/>
            <Button ToolTip="另存为" Width="28"
                    Template="{StaticResource generalButtonTemplate}"
                    Command="{Binding SaveAsFileCommand}"
                    Content="M0,5 0,0 3,0 3,5 8,5 8,0 9,0 12,3 12,14 L8,14 
                    M4,14 0,14 L0,13
                    M4,0 6,0 L6,4 M0,10 L8,10 M5,7 8,10 L5,13"/>
            <!--<Separator Width="1" Margin="4" Background="{DynamicResource ThemeBrush}" Opacity="0.5"
                       Style="{DynamicResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <CheckBox ToolTip="节点图" Width="28" Tag="r"
                      Template="{StaticResource generalCheckTemplate}"  
                      IsChecked="{Binding IsFlowChartShowing}" 
                      IsEnabled="{Binding CanHideFlowChart}"
                      Content="M0,0 0,3 6,3 6,0 Z
                      M3,3 L3,11 M11,3 11,7 5,7 L5,11
                      M1,11 1,14 7,14 7,11 Z
                      M8,0 8,3 14,3 14,0 Z"/>
            <CheckBox ToolTip="文本页" Width="28" Tag="l"
                      Template="{StaticResource generalCheckTemplate}" 
                      IsChecked="{Binding IsWorkTabShowing}" 
                      IsEnabled="{Binding CanHideWorkTab}"
                      Content="M0,0 L14,0
                      M0,4 L14,4 M0,8 L9,8 M0,12 L14,12"/>-->
            <Separator Width="1" Margin="4" Background="{DynamicResource ThemeBrush}" Opacity="0.5"
                       Style="{DynamicResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <Button ToolTip="字体缩小" Width="28"
                    Command="{Binding FontSizeDownCommand}"
                    Template="{StaticResource generalButtonTemplate}"
                    Content="M0,16 5,4 L10,16 M2,11 L8,11
                    M12,16 14,11.2 16,16
                    M10,4 16,4"/>
            <TextBlock Text="{Binding TextFontSize}" Width="14" VerticalAlignment="Center"
                       TextAlignment="Center" Foreground="{DynamicResource Foreground.BaseBrush}"/>
            <Button ToolTip="字体放大" Width="28"
                    Command="{Binding FontSizeUpCommand}"
                    Template="{StaticResource generalButtonTemplate}"
                    Content="M6,16 11,4 L16,16 M8,11 L14,11
                      M0,16 2,11.2 4,16
                      M0,4 6,4 M3,1 3,7"/>
            <Separator Width="1" Margin="4" Background="{DynamicResource ThemeBrush}" Opacity="0.5"
                       Style="{DynamicResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <Border Margin="6,1,6,1" BorderThickness="1,0,0,1" 
                    MinWidth="400" BorderBrush="{DynamicResource ThemeBrush}">
                <c:HintTextBlock Width="Auto" Margin="8,0,0,0"
                                 IsAwake="{Binding IsHintAwake}"
                                 InText="{Binding InText}"
                                 OutText="{Binding OutText}"/>
            </Border>
            <Separator Width="1" Margin="4" Background="{DynamicResource ThemeBrush}" Opacity="0.5"
                       Style="{DynamicResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <Menu Background="Transparent" Height="28">
                <MenuItem Header="M0,0 6,6 L0,12 M8,0 14,6 L8,12"
                          ToolTip="导出">
                    <MenuItem Header="导出为json" Command="{Binding OutputAsJSONCommand}"/>
                    <MenuItem Header="导出为txt"/>
                    <MenuItem Header="导出为docx"/>
                    <MenuItem Header="导出为latex"/>
                </MenuItem>
            </Menu>
            <CheckBox Width="28"
                      Template="{StaticResource generalCheckTemplate}" 
                      IsChecked="{Binding IsFullScreen}" >
                <CheckBox.Style>
                    <Style TargetType="{x:Type CheckBox}">
                        <Setter Property="ToolTip" Value="全屏"/>
                        <Setter Property="Content" Value="M0,6 0,12 L6,12 
                                M6,0 12,0 L12,6"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="ToolTip" Value="还原"/>
                                <Setter Property="Content" Value="M0,8 6,8 L6,14 
                                        M8,0 8,6 L14,6"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>
        </StackPanel>
        <!--没有加载文件时的提示文本-->
        <StackPanel Grid.Row="1" Orientation="Vertical" 
                    HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Text="欢迎使用多分支文本编辑器"
                       Foreground="{DynamicResource Foreground.BaseBrush}" FontSize="24"/>
            <TextBlock Text="请点击[浏览]或按下Ctrl+O打开导航文件"
                       Foreground="{DynamicResource Foreground.BaseBrush}" FontSize="24"/>
        </StackPanel>
        <!--正式的两个工作控件-->
        <Grid Grid.Row="1" Background="{DynamicResource ThemeBrush}" IsEnabled="{Binding IsWorkGridVisible}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding FlowChartWidth}"/>
                <ColumnDefinition Width="0"/>
                <ColumnDefinition Width="{Binding WorkTabWidth}"/>
            </Grid.ColumnDefinitions>
            <c:FlowChartContainer x:Name="flowChart" Grid.Column="0" Margin="0,0,6,0"/>
            <TabControl x:Name="workTabControl" Grid.Column="2" Padding="0"  Margin="6,0,0,0"
                        ItemsSource="{Binding WorkTabs, Mode=TwoWay}"
                        SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"/>
            <!--中央的左右调节控件-->
            <UserControl Grid.Column="1">
                <UserControl.Template>
                    <ControlTemplate TargetType="{x:Type UserControl}">
                        <Grid x:Name="Root" Background="Transparent" Margin="-6,0,-6,0" >
                            <Rectangle Fill="{DynamicResource BaseBrush}" Margin="0,0,0,20"
                                       HorizontalAlignment="Center" Width="12"/>
                            <Rectangle x:Name="bgBorder" Opacity="0" Margin="0,0,0,20"
                                       IsHitTestVisible="False"
                                       Fill="{DynamicResource ThemeBrush}">
                                <Rectangle.OpacityMask>
                                    <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="White" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Grid x:Name="btnHost" IsHitTestVisible="False" Height="28" Width="56"
                                  Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Border BorderBrush="{DynamicResource ThemeBrush}" 
                                        Background="{DynamicResource BaseBrush}"
                                        BorderThickness="1"
                                        CornerRadius="5"/>
                                <Button Background="{DynamicResource ThemeBrush}"
                                        Command="{Binding LeftPullCommand}"
                                        HorizontalAlignment="Left" Width="28" Tag="r"
                                        Template="{StaticResource generalButtonTemplate}"
                                        Content="M7,0 7,4 14,4 14,10 7,10 7,14 0,7Z"/>
                                <Button Background="{DynamicResource ThemeBrush}" 
                                        Command="{Binding RightPullCommand}"
                                        HorizontalAlignment="Right" Width="28" Tag="l"
                                        Template="{StaticResource generalButtonTemplate}"
                                        Content="M7,0 7,4 0,4 0,10 7,10 7,14 14,7Z"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Margin" Value="-28,0,-28,0" TargetName="Root"/>
                                <Setter Property="IsHitTestVisible" Value="True" TargetName="btnHost"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3" From="0" To="0.6"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="bgBorder"/>
                                            <DoubleAnimation Duration="0:0:0.3" From="0" To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="btnHost"/>
                                        </Storyboard>
                                    </BeginStoryboard>                            
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3" From="0.6" To="0"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="bgBorder"/>
                                            <DoubleAnimation Duration="0:0:0.3" From="1" To="0"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="btnHost"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </UserControl.Template>
            </UserControl>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="Opacity" Value="0"/>
                    <Setter Property="IsHitTestVisible" Value="False"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.4"
                                                                       Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0" Value="0.6"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="1" KeySpline="0.6,1,0.6,1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.4"
                                                                       Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0" Value="0.6"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="1" KeySpline="0.6,1,0.6,1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.5" From="0" To="1"
                                                         Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.4"
                                                                       Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0.6" KeySpline="0.6,1,0.6,1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.4"
                                                                       Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0.6" KeySpline="0.6,1,0.6,1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.5" From="1" To="0"
                                                         Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>

</local:MetroWindow>

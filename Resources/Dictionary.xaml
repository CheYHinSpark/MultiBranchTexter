<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MultiBranchTexter"
                    xmlns:c="clr-namespace:MultiBranchTexter.Controls"
                    xmlns:cvt="clr-namespace:MultiBranchTexter.Converters"
                    >
    <!--颜色部分-->
    <Color x:Key="mainColor">#FF873674</Color>
    <Color x:Key="mainHighColor">#FFDD88AA</Color>
    <SolidColorBrush x:Key="mainColorBrush" Color="{StaticResource mainColor}"/>
    <SolidColorBrush x:Key="darkBorderBrush" Color="#FF323232"/>
    <SolidColorBrush x:Key="mainHighBrush" Color="{StaticResource mainHighColor}"/>
    <SolidColorBrush x:Key="redBrush" Color="#FFD44C45"/>
    <SolidColorBrush x:Key="textBoxHighlightBorderBrush" Color="#FF64BAE0"/>
    <SolidColorBrush x:Key="nodeBgBrush" Color="AliceBlue"/>
    <SolidColorBrush x:Key="nodeBgHBrush" Color="#FFC9EAFF"/>

    <!--转换器-->
    <cvt:NumberToPercentStrConverter x:Key="numToPerCvt" />
    <cvt:ListToBoolConverter x:Key="listToBoolCvt"/>


    <!--右键菜单style-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="{StaticResource nodeBgBrush}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource mainColorBrush}">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1" Background="Transparent">
            <Grid>
                <ContentPresenter Margin="10,2,10,2"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            BorderThickness="1"
                            Background="{StaticResource nodeBgBrush}"
                            BorderBrush="{StaticResource mainColorBrush}">
                        <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource mainColorBrush}" TargetName="Border"/>
                <Setter Property="Background" Value="{StaticResource nodeBgHBrush}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="Gray" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1" Background="Transparent">
            <ContentPresenter Margin="10,2,10,2"
                              ContentSource="Header"
                              RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource mainColorBrush}" TargetName="Border"/>
                <Setter Property="Background" Value="{StaticResource nodeBgHBrush}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="Gray" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1" Background="Transparent">
            <Grid>
                <ContentPresenter x:Name="HeaderHost"
                                 Margin="10,2,10,2"
                                 ContentSource="Header"
                                 HorizontalAlignment="Center"
                                 RecognizesAccessKey="True" />
                <Path HorizontalAlignment="Right" Margin="2"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 10 L 5 5 Z" Fill="Black"/>
                <Popup x:Name="Popup"
                       Placement="Right"
                       HorizontalOffset="0"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="{StaticResource nodeBgBrush}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource mainColorBrush}">
                        <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Hidden">
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource mainColorBrush}" TargetName="Border"/>
                <Setter Property="Background" Value="{StaticResource nodeBgHBrush}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="Gray" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1" Background="Transparent">
            <ContentPresenter x:Name="HeaderHost"
                              Margin="10,2,10,2"
                              ContentSource="Header"
                              HorizontalAlignment="Center"
                              RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource mainColorBrush}" TargetName="Border"/>
                <Setter Property="Background" Value="{StaticResource nodeBgHBrush}" TargetName="Border"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="Gray" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- MenuItem Style -->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope"
                        Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>




    <!--ScrollBar-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Background="{StaticResource mainColorBrush}">
                        <Path Fill="White"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{Binding Content, 
                            RelativeSource={RelativeSource TemplatedParent}}" >
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource mainHighBrush}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="thumbBd" Background="{StaticResource mainColorBrush}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource mainHighBrush}" TargetName="thumbBd"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Background="LightGray">
            <Grid.RowDefinitions>
                <RowDefinition Height="12" />
                <RowDefinition Height="*" />
                <RowDefinition Height="12" />
            </Grid.RowDefinitions>
            <RepeatButton Grid.Row="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Command="ScrollBar.LineUpCommand"
                          Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track x:Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2"
                          Style="{StaticResource ScrollBarLineButton}"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Background="LightGray">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="12" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="12" />
            </Grid.ColumnDefinitions>
            <RepeatButton Grid.Column="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Command="ScrollBar.LineLeftCommand"
                          Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track x:Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2"
                          Style="{StaticResource ScrollBarLineButton}"
                          Command="ScrollBar.LineRightCommand"
                          Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="12" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="12" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--通用按钮样式-->
    <ControlTemplate x:Key="generalButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="BD" CornerRadius="4" Margin="2"
                Background="{StaticResource mainColorBrush}">
            <ContentPresenter x:Name="CP" TextElement.Foreground="White"
                              Margin="2"
                              HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource mainHighBrush}" TargetName="BD"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--最小化和关闭按钮样式-->
    <Style x:Key="WinMinCloseBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder" Background="Transparent">
                        <Grid>
                            <Path x:Name="CP" Stroke="White" StrokeThickness="2" Data="M8,12 L22,12"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource mainHighBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Name" Value="CloseWinButton"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource redBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="Name" Value="CloseWinButton">
                            <Setter TargetName="CP" Property="Data" Value="M9,6 L21,18 M9,18 L21,6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--最大化与还原按钮样式-->
    <Style x:Key="WinMaxBtnStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border x:Name="MainBorder" Background="Transparent">
                        <Grid>
                            <Path x:Name="CP" Stroke="White" StrokeThickness="2" Data="M8,7 8,17 22,17 22,7 Z"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource mainHighBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CP" Property="Data" Value="M8,10 8,18 18,18 18,10 Z M18,14 22,14 22,6 12,6 12,10"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--窗体控件模板-->
    <ControlTemplate x:Key="MetroWindowTemplate" TargetType="{x:Type Window}">
        <Border>
            <Grid x:Name="LayoutRoot" Background="Black">
                <Grid.RowDefinitions>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--标题栏-->
                <Grid Grid.Row="0" Background="{StaticResource mainColorBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="WindowTitleTbl" Grid.Column="0" Text="" 
                               VerticalAlignment="Center" 
                               Margin="10,0,0,0" Foreground="White"/>
                    <Button x:Name="MinWinButton" Grid.Column="2" Style="{StaticResource WinMinCloseBtnStyle}"/>
                    <CheckBox x:Name="MaxWinButton" Grid.Column="3" Style="{StaticResource WinMaxBtnStyle}"/>
                    <Button x:Name="CloseWinButton" Grid.Column="4" Style="{StaticResource WinMinCloseBtnStyle}"/>
                </Grid>
                <!--内容部分-->
                <AdornerDecorator Grid.Row="1">
                    <ContentPresenter/>
                </AdornerDecorator>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="Margin" Value="5,5,5,0" TargetName="LayoutRoot"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--窗体控件Style-->
    <Style x:Key="MetroWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="MinHeight" Value="300"/>
        <Setter Property="MinWidth" Value="400"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template" Value="{StaticResource MetroWindowTemplate}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <!--允许调整窗口大小-->
                <WindowChrome GlassFrameThickness="-1" 
                              CornerRadius="0" 
                              CaptionHeight="0"
                              UseAeroCaptionButtons="False"
                              ResizeBorderThickness="4" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--TabItem的关闭按钮-->
    <ControlTemplate x:Key="TabItemCloseBtnTemplate" TargetType="{x:Type Button}">
        <Border x:Name="BD" Width="16" Height="16" CornerRadius="8"
                Background="Transparent">
            <Path x:Name="CP" Stroke="White" StrokeThickness="1" Data="M4,4 L12,12 M4,12 L12,4"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource redBrush}" TargetName="BD"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Uid" Value="1"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Stroke" Value="Gray" TargetName="CP"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--TabItem模板-->
    <ControlTemplate x:Key="MBTabItemTemplate" TargetType="{x:Type TabItem}">
        <Border x:Name="BD" BorderBrush="{StaticResource darkBorderBrush}" 
                Background="{StaticResource mainColorBrush}"
                BorderThickness="1" CornerRadius="4,4,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="CP" Grid.Column="0" 
                                  ContentSource="Header" 
                                  TextElement.Foreground="White"
                                  Margin="2"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <Button Grid.Column="1" Name="CloseBtn" 
                        Width="16" Height="16" x:Uid="0"
                        Template="{StaticResource TabItemCloseBtnTemplate}"
                        HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource mainHighBrush}" TargetName="BD"/>
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="TextElement.Foreground" Value="Black" TargetName="CP"/>
                <Setter Property="Background" Value="White" TargetName="BD"/>
                <Setter Property="BorderThickness" Value="2,2,2,0" TargetName="BD"/>
                <Setter Property="BorderBrush" Value="{StaticResource textBoxHighlightBorderBrush}" TargetName="BD"/>
                <Setter Property="Uid" Value="1" TargetName="CloseBtn"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--TabControl Style-->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Row="0"
                                  Panel.ZIndex="1"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1"
                                  Background="Transparent" />
                        <Border x:Name="Border"
                                Grid.Row="1"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                Background="White">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--textBox的模板-->
    <ControlTemplate x:Key="textBoxTemplate" TargetType="{x:Type TextBox}">
        <Border x:Name="BD" BorderThickness="2" BorderBrush="Transparent">
            <ScrollViewer Margin="0"
                          x:Name="PART_ContentHost" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource textBoxHighlightBorderBrush}" TargetName="BD"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--searchBox的按钮模板-->
    <ControlTemplate x:Key="searchBoxBtnTemp" TargetType="{x:Type Button}">
        <Border x:Name="MainBorder" Background="Transparent">
            <Grid>
                <Path x:Name="CP" Stroke="White" StrokeThickness="2" Data="M4,10 L16,10 M12,5 16,10 L12,15"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource mainHighBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="Name" Value="closeBtn"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource redBrush}"/>
            </MultiTrigger>
            <Trigger Property="Name" Value="closeBtn">
                <Setter TargetName="CP" Property="Data" Value="M5,5 L15,15 M5,15 L15,5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--连接线style-->
    <Style x:Key="connectingLinePathStyle" TargetType="{x:Type Path}">
        <Setter Property="Stroke" Value="Aqua"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" Value="DarkOrange"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Tag" Value="1"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Stroke" Value="Goldenrod"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--yesno答案框-->
    <ControlTemplate x:Key="yesnoAnswerTemplate" TargetType="{x:Type c:NodeBase}">
        <Border x:Name="ynBd" Background="AliceBlue" BorderBrush="DarkRed" 
                BorderThickness="1" CornerRadius="4">
            <Path x:Name="CP" StrokeThickness="2" Stroke="Black" Data="M0,0 4,8 L10,0"
                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource nodeBgHBrush}" TargetName="ynBd"/>
            </Trigger>
            <Trigger Property="Name" Value="noNode">
                <Setter Property="Data" Value="M0,0 L9,9 M9,0 L0,9" TargetName="CP"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--多选后继的单个答案框-->
    <ControlTemplate x:Key="multiAnswerTemplate" TargetType="{x:Type c:NodeBase}">
        <Grid Height="24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="maCloseBtn" Grid.Column="0" Width="0" Height="18">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="maBd" CornerRadius="6,0,0,6" Background="Gray">
                            <Path x:Name="CP" Stroke="White" 
                                  StrokeThickness="1" Data="M5,5 L13,13 M5,13 L13,5"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource redBrush}" TargetName="maBd"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Border x:Name="maBd"  Grid.Column="1"
                    Background="{StaticResource nodeBgBrush}" BorderBrush="DarkRed" 
                    BorderThickness="1" CornerRadius="4">
                <TextBox x:Name="answerTxt" Margin="2,2,8,2"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource nodeBgHBrush}" TargetName="maBd"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="maCloseBtn"
                                Storyboard.TargetProperty="(Button.Width)"
                                To="16" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="maCloseBtn"
                                Storyboard.TargetProperty="(Button.Width)"
                                To="0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--控制下面东西升降的按钮的template-->
    <ControlTemplate x:Key="upDownCheckBoxTemplate" TargetType="{x:Type CheckBox}">
        <Border x:Name="cbBd" Background="{StaticResource mainColorBrush}"
                Width="18" Height="18" CornerRadius="4">
            <Path x:Name="CP" Data="M0,4 4,0 L8,4 M0,8 4,4 L8,8"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Stroke="White" StrokeThickness="1"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource mainHighBrush}" TargetName="cbBd"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Data" Value="M0,0 4,4 L8,0 M0,4 4,8 L8,4" TargetName="CP"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--每个标签页末尾的东西-->
    <ControlTemplate x:Key="tabEndTemplate" TargetType="{x:Type UserControl}">
        <Grid Background="{StaticResource mainColorBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <CheckBox x:Name="showHideBtn" IsChecked="False"
                      Template="{StaticResource upDownCheckBoxTemplate}"
                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock x:Name="questionTxt" Grid.Column="1" Foreground="White"
                       Margin="8,0,0,0"
                       VerticalAlignment="Center"/>
            <ScrollViewer x:Name="sv" Grid.Row="1" Height="0" Grid.ColumnSpan="3"
                          Background="White"
                          FocusVisualStyle="{x:Null}"
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <Grid x:Name="container" Grid.IsSharedSizeScope="True"/>
            </ScrollViewer>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True" SourceName="showHideBtn">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="sv"
                                             Storyboard.TargetProperty="(ScrollViewer.Height)"
                                             Duration="0:0:0.5" 
                                             To="120"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="sv"
                                             Storyboard.TargetProperty="(ScrollViewer.Height)"
                                             Duration="0:0:0.5" 
                                             To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>
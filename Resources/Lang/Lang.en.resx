<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bg_EmptyTab" xml:space="preserve">
    <value>Please open a node from nodes' picture</value>
  </data>
  <data name="Bg_Main" xml:space="preserve">
    <value>Welcome to MultiBranchTexter
Open navigation file by Ctrl+O or drag in
Create navigation file by Ctrl+Shift+N</value>
  </data>
  <data name="FCC_Avg" xml:space="preserve">
    <value>Average</value>
  </data>
  <data name="FCC_CharCount" xml:space="preserve">
    <value>Char: </value>
  </data>
  <data name="FCC_Delete" xml:space="preserve">
    <value>Delete node(Delete)</value>
  </data>
  <data name="FCC_Max" xml:space="preserve">
    <value>Maximum</value>
  </data>
  <data name="FCC_Min" xml:space="preserve">
    <value>Minimum</value>
  </data>
  <data name="FCC_NewNode" xml:space="preserve">
    <value>New node(Ctrl+N)</value>
  </data>
  <data name="FCC_NodeCount" xml:space="preserve">
    <value>Node: </value>
  </data>
  <data name="FCC_Rearrange" xml:space="preserve">
    <value>Rearrange</value>
  </data>
  <data name="FCC_SearchTitle" xml:space="preserve">
    <value>Search title</value>
  </data>
  <data name="FCC_UniteX" xml:space="preserve">
    <value>Unite X</value>
  </data>
  <data name="FCC_UniteY" xml:space="preserve">
    <value>Unite Y</value>
  </data>
  <data name="FCC_WordCount" xml:space="preserve">
    <value>Word: </value>
  </data>
  <data name="Hint_Cancelled" xml:space="preserve">
    <value>Action cancelled</value>
  </data>
  <data name="Hint_ClickOver" xml:space="preserve">
    <value>Complete choosing post node</value>
  </data>
  <data name="Hint_CreateFC" xml:space="preserve">
    <value>Create nodes' picture successfully</value>
  </data>
  <data name="Hint_File" xml:space="preserve">
    <value>File </value>
  </data>
  <data name="Hint_Node" xml:space="preserve">
    <value>Node </value>
  </data>
  <data name="Hint_Nodes" xml:space="preserve">
    <value> nodes</value>
  </data>
  <data name="Hint_OpenFailed" xml:space="preserve">
    <value>Open file failed</value>
  </data>
  <data name="Hint_OpenNode" xml:space="preserve">
    <value>Open node </value>
  </data>
  <data name="Hint_OutputJSON" xml:space="preserve">
    <value>Start outputting JSON, please wait</value>
  </data>
  <data name="Hint_OutputPic" xml:space="preserve">
    <value>Start outputting picture, please wait</value>
  </data>
  <data name="Hint_Rearrange" xml:space="preserve">
    <value>Rearrange nodes' picture successfully</value>
  </data>
  <data name="Hint_SaveSuccess" xml:space="preserve">
    <value> has been saved</value>
  </data>
  <data name="Hint_Searched" xml:space="preserve">
    <value>Found </value>
  </data>
  <data name="Hint_Selected" xml:space="preserve">
    <value>Selected </value>
  </data>
  <data name="Hint_WaitClick" xml:space="preserve">
    <value>Wait to choose post node</value>
  </data>
  <data name="Line_AddNode" xml:space="preserve">
    <value>Add node</value>
  </data>
  <data name="Line_Delete" xml:space="preserve">
    <value>Delete line</value>
  </data>
  <data name="Line_From" xml:space="preserve">
    <value>From </value>
  </data>
  <data name="Line_To" xml:space="preserve">
    <value>To </value>
  </data>
  <data name="Line_ToBegin" xml:space="preserve">
    <value>To begin node</value>
  </data>
  <data name="Line_ToEnd" xml:space="preserve">
    <value>To end node</value>
  </data>
  <data name="Msg_AEmpty" xml:space="preserve">
    <value>Answer cannot be empty, and has been restored</value>
  </data>
  <data name="Msg_ARepeated" xml:space="preserve">
    <value>Answer is repeated, and has been restored</value>
  </data>
  <data name="Msg_ChangeEnd" xml:space="preserve">
    <value>Be sure to change end condition?
This will delete all post connecting lines of this node, and the action cannot be cancelled!</value>
  </data>
  <data name="Msg_DeleteNode" xml:space="preserve">
    <value>Be sure to delete node?
This will delete all connecting lines of this node, and the action cannot be cancelled!</value>
  </data>
  <data name="Msg_FirstStart" xml:space="preserve">
    <value>First time startup, need to edit registry, 
please restart as administrator</value>
  </data>
  <data name="Msg_LatestVer" xml:space="preserve">
    <value>Current version is the latest</value>
  </data>
  <data name="Msg_MultiDeletePost" xml:space="preserve">
    <value> nodes!
All connecting lines of these nodes will be deleted, and this action cannot be cancelled!</value>
  </data>
  <data name="Msg_MultiDeletePre" xml:space="preserve">
    <value>You are going to delete </value>
  </data>
  <data name="Msg_NameIllegal" xml:space="preserve">
    <value>Node name cannot contain *\/:"?&lt;&gt;|, and has been restored</value>
  </data>
  <data name="Msg_NameRepeat" xml:space="preserve">
    <value>Node name repeated, and has been restored</value>
  </data>
  <data name="Msg_NewVerFound" xml:space="preserve">
    <value>New version is released  </value>
  </data>
  <data name="Msg_NotEmptyDir" xml:space="preserve">
    <value>The directory is not empty, please be careful! </value>
  </data>
  <data name="Msg_Rearrange" xml:space="preserve">
    <value>You are going to rearrange nodes' picture! 
This may cause chaos, and this action cannot be cancelled. </value>
  </data>
  <data name="Msg_SaveFile" xml:space="preserve">
    <value>File has been modified. Save it now?</value>
  </data>
  <data name="Msg_SaveTxt" xml:space="preserve">
    <value>Text has been modified. Save it now?</value>
  </data>
  <data name="Msg_UpdateQ" xml:space="preserve">
    <value>Update now?</value>
  </data>
  <data name="N_ChangeEnd" xml:space="preserve">
    <value>Change end condition</value>
  </data>
  <data name="N_Check" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="N_Delete" xml:space="preserve">
    <value>Delete node</value>
  </data>
  <data name="N_Multi" xml:space="preserve">
    <value>Multiple</value>
  </data>
  <data name="N_NewEndHint" xml:space="preserve">
    <value>Click to set as 
new post node</value>
  </data>
  <data name="N_Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="N_Single" xml:space="preserve">
    <value>Single</value>
  </data>
  <data name="N_ToCheck" xml:space="preserve">
    <value>Switch to check</value>
  </data>
  <data name="N_ToQuestion" xml:space="preserve">
    <value>Switch to question</value>
  </data>
  <data name="N_YesNo" xml:space="preserve">
    <value>Yes &amp; No</value>
  </data>
  <data name="Out_AfterComment" xml:space="preserve">
    <value>After comment</value>
  </data>
  <data name="Out_AfterContent" xml:space="preserve">
    <value>After content</value>
  </data>
  <data name="Out_AfterNode" xml:space="preserve">
    <value>After node</value>
  </data>
  <data name="Out_AnswerTemplate" xml:space="preserve">
    <value>Answer template</value>
  </data>
  <data name="Out_BeforeComment" xml:space="preserve">
    <value>Before comment</value>
  </data>
  <data name="Out_BeforeContent" xml:space="preserve">
    <value>Before content</value>
  </data>
  <data name="Out_BeforeNode" xml:space="preserve">
    <value>Before node</value>
  </data>
  <data name="Out_Browser" xml:space="preserve">
    <value>Browser</value>
  </data>
  <data name="Out_EndAnswerTitle" xml:space="preserve">
    <value>## will be replaced by answer text, \# will be replaced by #
@@ will be replaced by corresponding node's title, \@ will be replaced by @</value>
  </data>
  <data name="Out_EndTitle" xml:space="preserve">
    <value>## will be replaced by question text, \# will be replaced by #</value>
  </data>
  <data name="Out_IgnoreEmptyAnswer" xml:space="preserve">
    <value>Ignore empty answer</value>
  </data>
  <data name="Out_IgnoreEmptyComment" xml:space="preserve">
    <value>Ignore empty comment</value>
  </data>
  <data name="Out_IsCommentBefore" xml:space="preserve">
    <value>Output comment before content</value>
  </data>
  <data name="Out_Output" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="Out_OutputComment" xml:space="preserve">
    <value>Output comment</value>
  </data>
  <data name="Out_OutputEnd" xml:space="preserve">
    <value>Output end condition</value>
  </data>
  <data name="Out_Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="Out_QTemplate" xml:space="preserve">
    <value>Question template</value>
  </data>
  <data name="Out_Title" xml:space="preserve">
    <value>&amp;&amp; will be replaced by node's title, \&amp; will be replaced by &amp;
$$ will be replaced by file name, \$ will be replaced by $</value>
  </data>
  <data name="Out_Win" xml:space="preserve">
    <value>Output individually</value>
  </data>
  <data name="Set_CheckUpdate" xml:space="preserve">
    <value>Check update</value>
  </data>
  <data name="Set_Color" xml:space="preserve">
    <value>Color settings</value>
  </data>
  <data name="Set_CountComment" xml:space="preserve">
    <value>Count comments' words</value>
  </data>
  <data name="Set_CurrentVer" xml:space="preserve">
    <value>Current version  </value>
  </data>
  <data name="Set_DarkMode" xml:space="preserve">
    <value>Darkmode</value>
  </data>
  <data name="Set_Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Set_DoubleCtrlS" xml:space="preserve">
    <value>Double Ctrl+S to save the whole file</value>
  </data>
  <data name="Set_DoubleEnter" xml:space="preserve">
    <value>Double ENTER not to split fragment</value>
  </data>
  <data name="Set_ReadMe" xml:space="preserve">
    <value>README</value>
  </data>
  <data name="Set_ScrollInertia" xml:space="preserve">
    <value>Enable scrollbar's inertia</value>
  </data>
  <data name="Set_TextMargin" xml:space="preserve">
    <value>Text margin</value>
  </data>
  <data name="Set_ViewWeb" xml:space="preserve">
    <value>View Github</value>
  </data>
  <data name="Sys_AllExt" xml:space="preserve">
    <value>All Files</value>
  </data>
  <data name="Sys_Extname" xml:space="preserve">
    <value>MBT File</value>
  </data>
  <data name="Tab_Back" xml:space="preserve">
    <value>Back to picture</value>
  </data>
  <data name="Tab_Char" xml:space="preserve">
    <value>Char: </value>
  </data>
  <data name="Tab_EndCond" xml:space="preserve">
    <value>End condition</value>
  </data>
  <data name="Tab_HideComment" xml:space="preserve">
    <value>Hide comment</value>
  </data>
  <data name="Tab_SearchLast" xml:space="preserve">
    <value>Search last</value>
  </data>
  <data name="Tab_SearchNext" xml:space="preserve">
    <value>Search next</value>
  </data>
  <data name="Tab_ShowComment" xml:space="preserve">
    <value>Show comment</value>
  </data>
  <data name="Tab_ToNode" xml:space="preserve">
    <value>Jump to the post node</value>
  </data>
  <data name="Tab_Word" xml:space="preserve">
    <value>Word: </value>
  </data>
  <data name="TB_Create" xml:space="preserve">
    <value>New(Ctrl+Shift+N)</value>
  </data>
  <data name="TB_FontDown" xml:space="preserve">
    <value>Fontsize down(Alt+Down)</value>
  </data>
  <data name="TB_FontUp" xml:space="preserve">
    <value>Fontsize up(Alt+Up)</value>
  </data>
  <data name="TB_FullSc" xml:space="preserve">
    <value>Fullscreen</value>
  </data>
  <data name="TB_Open" xml:space="preserve">
    <value>Open(Ctrl+O)</value>
  </data>
  <data name="TB_Output" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="TB_OutputJSON" xml:space="preserve">
    <value>Output JSON</value>
  </data>
  <data name="TB_OutputPic" xml:space="preserve">
    <value>Output nodes' picture .png</value>
  </data>
  <data name="TB_OutputTxt" xml:space="preserve">
    <value>Output nodes‘ text individually</value>
  </data>
  <data name="TB_Restore" xml:space="preserve">
    <value>Restore(Esc)</value>
  </data>
  <data name="TB_Save" xml:space="preserve">
    <value>Save(Ctrl+Alt+S)</value>
  </data>
  <data name="TB_SaveAs" xml:space="preserve">
    <value>Save As(Ctrl+Shift+S)</value>
  </data>
  <data name="Win_Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Win_Max" xml:space="preserve">
    <value>Maximize</value>
  </data>
  <data name="Win_Min" xml:space="preserve">
    <value>Minimize</value>
  </data>
  <data name="Win_Option" xml:space="preserve">
    <value> Option </value>
  </data>
  <data name="Win_Restore" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="Win_Warn" xml:space="preserve">
    <value>WARNING</value>
  </data>
</root>
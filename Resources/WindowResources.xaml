<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MultiBranchTexter"
                    xmlns:v="clr-namespace:MultiBranchTexter.View"
                    xmlns:r="clr-namespace:MultiBranchTexter.Resources"
                    xmlns:vm="clr-namespace:MultiBranchTexter.ViewModel"
                    >
    <!--标题栏的按钮样式-->
    <Style x:Key="ThemeBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder" Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource Highlight.ThemeBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Name" Value="CloseWinButton"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource RedBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--最大化与还原按钮样式-->
    <Style x:Key="WinMaxBtnStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ToolTip" Value="{Binding [Win_Max], Source={x:Static r:LanguageManager.Instance}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border x:Name="MainBorder" Background="Transparent">
                        <Path x:Name="CP" Stroke="{DynamicResource Foreground.ThemeBrush}" 
                              StrokeThickness="2" Data="M8,7 8,17 22,17 22,7 Z"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource Highlight.ThemeBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CP" Property="Data" Value="M8,10 8,18 18,18 18,10 Z M18,14 22,14 22,6 12,6 12,10"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ToolTip" Value="{Binding [Win_Restore], Source={x:Static r:LanguageManager.Instance}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--设置区域用的checkbox-->
    <ControlTemplate x:Key="settingCheckBox" TargetType="{x:Type CheckBox}">
        <Grid Height="24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="TrueBd" BorderBrush="{DynamicResource Foreground.ThemeBrush}"
                    BorderThickness="2" Background="{DynamicResource BaseBrush}"
                    Margin="4"/>
            <ContentPresenter Grid.Column="1" TextElement.Foreground="{DynamicResource Foreground.ThemeBrush}" 
                              Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderThickness" Value="4" TargetName="TrueBd"/>
                <Setter Property="Background" Value="{DynamicResource ThemeBrush}" TargetName="TrueBd"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.6" TargetName="TrueBd"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--颜色滑条两边的样式-->
    <Style x:Key="colorRBStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Height" Value="6"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Style.Triggers>
            <Trigger Property="Tag" Value="Decrease">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="{TemplateBinding Foreground}"
                                    CornerRadius="3,0,0,3"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Tag" Value="Increase">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="{StaticResource MiddleBrush}"
                                    CornerRadius="0,3,3,0" BorderThickness="0,1,1,1"
                                    BorderBrush="{TemplateBinding Foreground}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="colorThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="PART_Back" BorderBrush="{TemplateBinding Foreground}" Background="#FFDDDDDD" 
                            BorderThickness="1" CornerRadius="3" Width="12" Height="16">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Back" Property="Background" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="colorSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="255"/>
        <Setter Property="SmallChange" Value="1"/>
        <Setter Property="LargeChange" Value="1"/>
        <Setter Property="TickFrequency" Value="1"/>
        <Setter Property="IsMoveToPointEnabled" Value="True"/>
        <Setter Property="AutoToolTipPlacement" Value="TopLeft"/>
        <Setter Property="Margin" Value="4,2,4,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Track x:Name="PART_Track" HorizontalAlignment="Stretch">
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource colorRBStyle}" 
                                          Tag="Increase" Command="Slider.IncreaseLarge"
                                          Foreground="{TemplateBinding Foreground}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource colorRBStyle}"
                                          Tag="Decrease" Command="Slider.DecreaseLarge" 
                                          Foreground="{TemplateBinding Foreground}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource colorThumb}" 
                                   Foreground="{TemplateBinding Foreground}"/>
                        </Track.Thumb>
                    </Track>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <!--主窗体控件模板-->
    <ControlTemplate x:Key="MainWindowTemplate" TargetType="{x:Type v:MetroWindow}">
        <Grid x:Name="LayoutRoot" Background="{DynamicResource ThemeBrush}">
            <Grid.DataContext>
                <vm:SettingViewModel x:Name="svm"/>
            </Grid.DataContext>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding TitleBarHeight}"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--标题栏-->
            <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Left">
                <ContentControl Width="24" Content="{DynamicResource iconImg}"/>
                <TextBlock x:Name="WindowTitleTbl" Grid.Row="0" Text="" 
                           VerticalAlignment="Center"
                           Foreground="{DynamicResource Foreground.ThemeBrush}"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Right">
                <Button x:Name="SettingButton" Width="Auto" 
                        Content="{Binding [Win_Option], Source={x:Static r:LanguageManager.Instance}}"
                        Template="{StaticResource textButtonTemplate}"/>
                <Button x:Name="MinWinButton"
                        ToolTip="{Binding [Win_Min], Source={x:Static r:LanguageManager.Instance}}"
                        Style="{DynamicResource ThemeBtnStyle}">
                    <Path Stroke="{DynamicResource Foreground.ThemeBrush}" 
                          StrokeThickness="2" Data="M8,12 L22,12"/>
                </Button>
                <CheckBox x:Name="MaxWinButton" Style="{DynamicResource WinMaxBtnStyle}"
                          IsChecked="{Binding Path=WindowState, 
                    RelativeSource={RelativeSource AncestorType=Window},
                    Converter={StaticResource stateToBoolCvt}}"/>
                <Button x:Name="CloseWinButton" 
                        ToolTip="{Binding [Win_Close], Source={x:Static r:LanguageManager.Instance}}"
                        Style="{DynamicResource ThemeBtnStyle}">
                    <Path Stroke="{DynamicResource Foreground.ThemeBrush}" 
                          StrokeThickness="2" Data="M9,6 L21,18 M9,18 L21,6"/>
                </Button>
            </StackPanel>
            <!--内容部分-->
            <AdornerDecorator Grid.Row="2">
                <AdornerDecorator.RenderTransform>
                    <TranslateTransform x:Name="ttf"/>
                </AdornerDecorator.RenderTransform>
                <ContentPresenter x:Name="CP" Opacity="0"/>
            </AdornerDecorator>
            <!--设置栏-->
            <Border x:Name="UpperBd" Grid.Row="2" IsHitTestVisible="False"
                    Background="Transparent"/>
            <Grid x:Name="SettingPanel" Grid.Row="1" Grid.RowSpan="2"
                  VerticalAlignment="Top"
                  Height="0" Opacity="0" Background="{DynamicResource ThemeBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="#80808080" Grid.ColumnSpan="3"/>
                <StackPanel Orientation="Vertical" Grid.Column="0" Margin="6">
                    <CheckBox Content="{Binding [Set_DarkMode], Source={x:Static r:LanguageManager.Instance}}"
                              IsChecked="{Binding IsDarkMode}"
                              Template="{StaticResource settingCheckBox}"/>
                    <CheckBox Content="{Binding [Set_DoubleEnter], Source={x:Static r:LanguageManager.Instance}}"
                              IsChecked="{Binding AllowDoubleEnter}"
                              Template="{StaticResource settingCheckBox}"/>
                    <CheckBox Content="{Binding [Set_CountComment], Source={x:Static r:LanguageManager.Instance}}"
                              IsChecked="{Binding CountOpChar}"
                              Template="{StaticResource settingCheckBox}"/>
                    <StackPanel Orientation="Vertical" Margin="2"
                                Background="{DynamicResource BaseBrush}">
                        <TextBlock Text="{Binding [Set_Color], Source={x:Static r:LanguageManager.Instance}}"
                                   Margin="4,4,0,0" 
                                   Foreground="{DynamicResource Foreground.BaseBrush}"/>
                        <Slider Style="{StaticResource colorSliderStyle}"
                                Foreground="#FFFF0000" Value="{Binding ColorR}"/>
                        <Slider Style="{StaticResource colorSliderStyle}" 
                                Foreground="#FF00FF00" Value="{Binding ColorG}"/>
                        <Slider Style="{StaticResource colorSliderStyle}" 
                                Foreground="#FF0000FF" Value="{Binding ColorB}"/>
                    </StackPanel>
                    <Button Content="{Binding [Set_Default], Source={x:Static r:LanguageManager.Instance}}"
                            Command="{Binding ToDefaultCommand}"
                            Template="{StaticResource textButtonTemplate}"
                            Height="24" Margin="2"
                            HorizontalAlignment="Left"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Grid.Column="1" Margin="6">
                    <CheckBox Content="{Binding [Set_DoubleCtrlS], Source={x:Static r:LanguageManager.Instance}}"
                              IsChecked="{Binding DoubleSaveAwake}"
                              Template="{StaticResource settingCheckBox}"/>
                    <CheckBox Content="{Binding [Set_ScrollInertia], Source={x:Static r:LanguageManager.Instance}}"
                              IsChecked="{Binding IsEnableInertia}"
                              Template="{StaticResource settingCheckBox}"/>
                    <StackPanel Orientation="Vertical" Margin="2"
                                Background="{DynamicResource BaseBrush}">
                        <TextBlock Text="{Binding [Set_TextMargin], Source={x:Static r:LanguageManager.Instance}}"
                                   Margin="4,4,0,0" 
                                   Foreground="{DynamicResource Foreground.BaseBrush}"/>
                        <Slider Maximum="200" Style="{StaticResource colorSliderStyle}"
                                Foreground="{DynamicResource ThemeBrush}" Value="{Binding SideWidth}"/>
                    </StackPanel>
                    <ComboBox SelectedIndex="{Binding LangIndex}">
                        <ComboBoxItem Content="中文"/>
                        <ComboBoxItem Content="English"/>
                    </ComboBox>
                </StackPanel>
                <StackPanel Orientation="Vertical" Grid.Column="2" Margin="6">
                    <Button Content="{Binding [Set_ReadMe], Source={x:Static r:LanguageManager.Instance}}"
                            Command="{Binding OpenIntroCommand}"
                            Template="{StaticResource textButtonTemplate}"
                            Height="24" Margin="2"
                            HorizontalAlignment="Left" />
                    <Button Content="{Binding [Set_ViewWeb], Source={x:Static r:LanguageManager.Instance}}"
                            Command="{Binding OpenMainWebCommand}"
                            Template="{StaticResource textButtonTemplate}"
                            Height="24" Margin="2"
                            HorizontalAlignment="Left" />
                    <Grid>
                        <Button Content="{Binding [Set_CheckUpdate], Source={x:Static r:LanguageManager.Instance}}"
                                Command="{Binding CheckUpdateCommand}"
                                Template="{StaticResource textButtonTemplate}"
                                Height="24" Margin="2"
                                HorizontalAlignment="Left" />
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Right" VerticalAlignment="Center">
                            <TextBlock Text="{Binding [Set_CurrentVer], Source={x:Static r:LanguageManager.Instance}}"
                                       Foreground="{DynamicResource Foreground.ThemeBrush}"/>
                            <TextBlock Text="{Binding VersionInfo}"
                                       Foreground="{DynamicResource Foreground.ThemeBrush}"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowSettings" Value="True">
                <Setter Property="Background" Value="#80808080" TargetName="UpperBd"/>
                <Setter Property="IsHitTestVisible" Value="True" TargetName="UpperBd"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Height)"
                                                           Timeline.DesiredFrameRate="60"
                                                           Storyboard.TargetName="SettingPanel"
                                                           FillBehavior="HoldEnd">
                                <SplineDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="200" KeySpline="0.4,1,0.4,1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.3" To="1"
                                             Timeline.DesiredFrameRate="60"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="SettingPanel"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Height)"
                                                           Timeline.DesiredFrameRate="60"
                                                           Storyboard.TargetName="SettingPanel"
                                                           FillBehavior="HoldEnd">
                                <SplineDoubleKeyFrame KeyTime="0:0:0" Value="200"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0.4,1,0.4,1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.3" To="0"
                                             Timeline.DesiredFrameRate="60"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="SettingPanel"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:1" To="1"
                                         Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="CP"/>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Y"
                                                       Storyboard.TargetName="ttf"
                                                       FillBehavior="Stop">
                            <SplineDoubleKeyFrame KeyTime="0:0:0" Value="60"/>
                            <SplineDoubleKeyFrame KeyTime="0:0:1" Value="0" KeySpline="0.4,1,0.4,1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--主窗体控件Style-->
    <Style x:Key="MainWindowStyle" TargetType="{x:Type v:MetroWindow}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="MinHeight" Value="300"/>
        <Setter Property="MinWidth" Value="400"/>
        <Setter Property="Template" Value="{StaticResource MainWindowTemplate}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <!--允许调整窗口大小-->
                <WindowChrome GlassFrameThickness="0"
                              CornerRadius="0" 
                              CaptionHeight="0"
                              UseAeroCaptionButtons="False"
                              ResizeBorderThickness="2" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--这是为了防止某些恶心的东西出现-->
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <!--允许调整窗口大小-->
                        <WindowChrome GlassFrameThickness="-1"
                                      CornerRadius="0" 
                                      CaptionHeight="0"
                                      UseAeroCaptionButtons="False"
                                      ResizeBorderThickness="0" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <!--以下为导出窗口-->
    <ControlTemplate x:Key="OutputWindowTemplate" TargetType="{x:Type v:OutputWindowBase}">
        <Grid x:Name="LayoutRoot" Background="{DynamicResource ThemeBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="24"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="26"/>
            </Grid.RowDefinitions>
            <!--标题栏-->
            <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Left">
                <ContentControl Width="24" Content="{DynamicResource outputIconImg}"/>
                <TextBlock x:Name="WindowTitleTbl" Grid.Row="0"
                           VerticalAlignment="Center"
                           Text="{Binding Title, 
                    RelativeSource={RelativeSource AncestorType={x:Type v:OutputWindowBase}}}"
                           Foreground="{DynamicResource Foreground.ThemeBrush}"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Right">
                <Button x:Name="MinWinButton" 
                        ToolTip="{Binding [Win_Min], Source={x:Static r:LanguageManager.Instance}}"
                        Style="{DynamicResource ThemeBtnStyle}">
                    <Path Stroke="{DynamicResource Foreground.ThemeBrush}" 
                          StrokeThickness="2" Data="M8,12 L22,12"/>
                </Button>
                <Button x:Name="CloseWinButton" 
                        ToolTip="{Binding [Win_Close], Source={x:Static r:LanguageManager.Instance}}"
                        Style="{DynamicResource ThemeBtnStyle}">
                    <Path Stroke="{DynamicResource Foreground.ThemeBrush}" 
                          StrokeThickness="2" Data="M9,6 L21,18 M9,18 L21,6"/>
                </Button>
            </StackPanel>
            <!--内容部分-->
            <AdornerDecorator Grid.Row="1" Margin="2,0,2,0">
                <ContentPresenter/>
            </AdornerDecorator>
            <!--下方部分-->
            <Grid Background="{DynamicResource BaseBrush}" Margin="2,0,2,2" Grid.Row="2">
                <StackPanel Orientation="Horizontal" Margin="8,0,0,0">
                    <TextBlock Text="导出路径" TextAlignment="Center" VerticalAlignment="Center"
                               Foreground="{DynamicResource Foreground.BaseBrush}"/>
                    <Border MinWidth="200" Margin="8,2,4,2" BorderThickness="0,0,0,2"
                            BorderBrush="{DynamicResource Text.Foreground.BaseBrush}">
                        <TextBlock Foreground="{DynamicResource Foreground.BaseBrush}"
                                   VerticalAlignment="Center" Margin="4,0,8,0"
                                   Text="{Binding SavePath, 
                            RelativeSource={RelativeSource AncestorType={x:Type v:OutputWindowBase}}}"/>
                    </Border>
                    <Border Background="{DynamicResource ThemeBrush}">
                        <Button x:Name="BrowseButton" Content="浏览"
                                Template="{StaticResource textButtonTemplate}"/>
                    </Border>
                </StackPanel>
                <Border Background="{DynamicResource ThemeBrush}" Margin="0,0,8,0"
                        HorizontalAlignment="Right">
                    <Button x:Name="OutputButton" Content="导出" 
                            Template="{StaticResource textButtonTemplate}"/>
                </Border>
            </Grid>
        </Grid>
    </ControlTemplate>
    <!--导出窗体控件Style-->
    <Style x:Key="OutputWindowStyle" TargetType="{x:Type v:OutputWindowBase}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource OutputWindowTemplate}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome GlassFrameThickness="1"
                              CornerRadius="0" 
                              CaptionHeight="0"
                              UseAeroCaptionButtons="False"
                              ResizeBorderThickness="0" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
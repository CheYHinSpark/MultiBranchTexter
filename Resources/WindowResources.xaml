<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MultiBranchTexter"
                    xmlns:vm="clr-namespace:MultiBranchTexter.ViewModel">
    
    <!--标题栏的按钮样式-->
    <Style x:Key="ThemeBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder" Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource Highlight.ThemeBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Name" Value="CloseWinButton"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource RedBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--最大化与还原按钮样式-->
    <Style x:Key="WinMaxBtnStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ToolTip" Value="最大化"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border x:Name="MainBorder" Background="Transparent">
                        <Path x:Name="CP" Stroke="{DynamicResource Foreground.ThemeBrush}" 
                              StrokeThickness="2" Data="M8,7 8,17 22,17 22,7 Z"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource Highlight.ThemeBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CP" Property="Data" Value="M8,10 8,18 18,18 18,10 Z M18,14 22,14 22,6 12,6 12,10"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ToolTip" Value="还原"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--设置区域用的checkbox-->
    <ControlTemplate x:Key="settingCheckBox" TargetType="{x:Type CheckBox}">
        <Grid Height="24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="TrueBd" BorderBrush="{DynamicResource Foreground.ThemeBrush}"
                    BorderThickness="2" Background="{DynamicResource MiddleBrush}"
                    Margin="4"/>
            <ContentPresenter Grid.Column="1" TextElement.Foreground="{DynamicResource Foreground.ThemeBrush}" 
                              Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderThickness" Value="4" TargetName="TrueBd"/>
                <Setter Property="Background" Value="{DynamicResource ThemeBrush}" TargetName="TrueBd"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Opacity" Value="0.8" TargetName="TrueBd"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--颜色滑条两边的样式-->
    <Style x:Key="colorRBStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Height" Value="6"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Style.Triggers>
            <Trigger Property="Tag" Value="Decrease">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="{TemplateBinding Foreground}"
                                    CornerRadius="3,0,0,3"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Tag" Value="Increase">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="{DynamicResource MiddleBrush}"
                                    CornerRadius="0,3,3,0" BorderThickness="0,1,1,1"
                                    BorderBrush="{TemplateBinding Foreground}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="colorThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="PART_Back" BorderBrush="{TemplateBinding Foreground}" Background="#FFDDDDDD" 
                            BorderThickness="1" CornerRadius="3" Width="12" Height="16">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Back" Property="Background" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="colorSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="255"/>
        <Setter Property="SmallChange" Value="1"/>
        <Setter Property="LargeChange" Value="1"/>
        <Setter Property="TickFrequency" Value="1"/>
        <Setter Property="IsMoveToPointEnabled" Value="True"/>
        <Setter Property="AutoToolTipPlacement" Value="TopLeft"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Track x:Name="PART_Track" HorizontalAlignment="Stretch">
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource colorRBStyle}" 
                                          Tag="Increase" Command="Slider.IncreaseLarge"
                                          Foreground="{TemplateBinding Foreground}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource colorRBStyle}"
                                          Tag="Decrease" Command="Slider.DecreaseLarge" 
                                          Foreground="{TemplateBinding Foreground}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource colorThumb}" 
                                   Foreground="{TemplateBinding Foreground}"/>
                        </Track.Thumb>
                    </Track>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <!--窗体控件模板-->
    <ControlTemplate x:Key="MetroWindowTemplate" TargetType="{x:Type local:MetroWindow}">
        <Border Background="Transparent">
            <Grid x:Name="LayoutRoot" Background="{DynamicResource ThemeBrush}"
                  RenderTransformOrigin="0.5,0.5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--标题栏-->
                <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Left">
                    <ContentControl Width="24" Content="{DynamicResource iconImg}"/>
                    <TextBlock x:Name="WindowTitleTbl" Grid.Row="0" Text="" 
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource Foreground.ThemeBrush}"/>
                </StackPanel>
          
                <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Right">
                    <Button x:Name="SettingButton" Style="{DynamicResource ThemeBtnStyle}"
                            Foreground="{DynamicResource Foreground.ThemeBrush}"
                            ToolTip="设置">
                        <Path Stroke="{DynamicResource Foreground.ThemeBrush}" 
                              StrokeThickness="1" HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M10,0 11,2 13,3 15,1 17,3 15,5 16,7 18,8 
                              18,10 16,11 15,13 17,15 15,17 13,15 11,16 10,18
                              8,18 7,16 5,15 3,17 1,15 3,13 2,11 0,10
                              0,8 2,7 3,5 1,3 3,1 5,3 7,2 8,0 Z
                              M9,6 11,7 12,9 11,11 9,12 7,11 6,9 7,7Z"/>
                    </Button>
                    <Button x:Name="MinWinButton" ToolTip="最小化"
                            Style="{DynamicResource ThemeBtnStyle}">
                        <Path Stroke="{DynamicResource Foreground.ThemeBrush}" 
                              StrokeThickness="2" Data="M8,12 L22,12"/>
                    </Button>
                    <CheckBox x:Name="MaxWinButton" Style="{DynamicResource WinMaxBtnStyle}"/>
                    <Button x:Name="CloseWinButton" ToolTip="关闭"
                            Style="{DynamicResource ThemeBtnStyle}">
                        <Path Stroke="{DynamicResource Foreground.ThemeBrush}" 
                              StrokeThickness="2" Data="M9,6 L21,18 M9,18 L21,6"/>
                    </Button>
                </StackPanel>
                <!--内容部分-->
                <AdornerDecorator Grid.Row="2">
                    <ContentPresenter x:Name="CP" Opacity="0"/>
                </AdornerDecorator>
                <!--设置栏-->
                <Grid x:Name="SettingPanel" Grid.Row="1" Height="0" Opacity="0" Background="#80808080">
                    <Grid.DataContext>
                        <vm:SettingViewModel x:Name="svm"/>
                    </Grid.DataContext>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Column="0" Margin="6">
                        <CheckBox Content="深色模式"
                                  IsChecked="{Binding IsDarkMode}"
                                  Template="{StaticResource settingCheckBox}"/>
                        <CheckBox Content="连续回车切割片段"
                                  IsChecked="{Binding AllowDoubleEnter}"
                                  Template="{StaticResource settingCheckBox}"/>                    
                        <Slider x:Name="colorR" Style="{StaticResource colorSliderStyle}"
                                Foreground="#FFFF0000" Value="{Binding ColorR}"/>
                        <Slider x:Name="colorG" Style="{StaticResource colorSliderStyle}" 
                                Foreground="#FF00FF00" Value="{Binding ColorG}"/>
                        <Slider x:Name="colorB" Style="{StaticResource colorSliderStyle}" 
                                Foreground="#FF0000FF" Value="{Binding ColorB}"/>
                    </StackPanel>
                </Grid>
                <Border x:Name="UpperBd" Grid.Row="2" IsHitTestVisible="False"
                        Background="Transparent"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="Margin" Value="6" TargetName="LayoutRoot"/>
            </Trigger>
            <Trigger Property="ShowSettings" Value="True">
                <Setter Property="Background" Value="#80808080" TargetName="UpperBd"/>
                <Setter Property="IsHitTestVisible" Value="True" TargetName="UpperBd"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.3" To="200"
                                             Timeline.DesiredFrameRate="60"
                                             Storyboard.TargetProperty="(Grid.Height)"
                                             Storyboard.TargetName="SettingPanel"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.3" To="0"
                                             Timeline.DesiredFrameRate="60"
                                             Storyboard.TargetProperty="(Grid.Height)"
                                             Storyboard.TargetName="SettingPanel"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:1" To="1"
                                         Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="CP"/>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Height)"
                                                       Storyboard.TargetName="SettingPanel"
                                                       FillBehavior="Stop">
                            <SplineDoubleKeyFrame KeyTime="0:0:0" Value="60"/>
                            <SplineDoubleKeyFrame KeyTime="0:0:1" Value="0" KeySpline="0.4,1,0.4,1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0:0:0" To="1" BeginTime="0:0:1.2"
                                         FillBehavior="HoldEnd"
                                         Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="SettingPanel"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--窗体控件Style-->
    <Style x:Key="MetroWindowStyle" TargetType="{x:Type local:MetroWindow}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="MinHeight" Value="300"/>
        <Setter Property="MinWidth" Value="400"/>
        <Setter Property="Template" Value="{StaticResource MetroWindowTemplate}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <!--允许调整窗口大小-->
                <WindowChrome GlassFrameThickness="0" 
                              CornerRadius="0" 
                              CaptionHeight="0"
                              UseAeroCaptionButtons="False"
                              ResizeBorderThickness="4" />
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>